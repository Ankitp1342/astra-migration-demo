{
  "icon_bg_color": null,
  "user_id": "eb23dd05-8b63-437c-9b1a-51dc5e58ec59",
  "gradient": null,
  "icon": null,
  "is_component": false,
  "tags": null,
  "updated_at": "2025-02-11T15:34:56+00:00",
  "locked": false,
  "webhook": false,
  "folder_id": "a62ebdb2-1903-4e78-934a-350e689d78db",
  "description": "Setup the Zero Downtime Proxy to Forward Live Application Traffic to Cassandra & AstraDB",
  "endpoint_name": null,
  "id": "7cd0f751-3e5e-48aa-bf1c-14d8192ce82a",
  "name": "1. Setup ZeroDowntime Proxy",
  "data": {
    "nodes": [
      {
        "id": "CustomComponent-gJoJP",
        "type": "genericNode",
        "position": {
          "x": -801.3185397113441,
          "y": -112.91786315711315
        },
        "data": {
          "node": {
            "template": {
              "_type": "Component",
              "source": {
                "tool_mode": false,
                "trace_as_metadata": true,
                "list": false,
                "trace_as_input": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "source",
                "value": "",
                "display_name": "CassandraConnection",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "The Cassandra Database",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "target": {
                "tool_mode": false,
                "trace_as_metadata": true,
                "list": false,
                "trace_as_input": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "target",
                "value": "",
                "display_name": "AstraDBConnection",
                "advanced": false,
                "input_types": [
                  "Data"
                ],
                "dynamic": false,
                "info": "The Astra Database",
                "title_case": false,
                "type": "other",
                "_input_type": "DataInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "# from langflow.field_typing import Data\nfrom langflow.custom import Component\nfrom langflow.io import MessageTextInput, Output, FileInput\nfrom langflow.schema import Data\nfrom langflow.field_typing import Text\nfrom langflow.schema.message import Message\nfrom zipfile import ZipFile, is_zipfile\nfrom pathlib import Path\nimport os\n\n\n\n\n\n\nclass CustomComponent(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.langflow.org/components/custom\"\n    icon = \"code\"\n    name = \"CustomComponent\"\n\n    inputs = [\n         DataInput(name=\"source\", display_name=\"CassandraConnection\", info=\"The Cassandra Database\"),\n         DataInput(name=\"target\", display_name=\"AstraDBConnection\", info=\"The Astra Database\"),\n    ]\n\n    outputs = [\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Message:\n        \n        os.environ[\"ZDM_TARGET_USERNAME\"] = self.target.data[\"target_username\"]\n        os.environ[\"ZDM_TARGET_PASSWORD\"] = self.target.data[\"target_password\"]\n        os.environ[\"ZDM_TARGET_SECURE_CONNECT_BUNDLE_PATH\"] = \"/usr/local/app/test_scb.zip\"\n        os.environ[\"ZDM_LOG_LEVEL\"]=\"DEBUG\"\n        \n        #cmd = \"cp \" + self.resolve_path(self.path) +  \" /usr/local/app/test_scb.zip\"  \n        \n        #returned_value = os.system(cmd)  \n        command = \"/usr/local/app/start_zdm.sh\"\n        \n        \n        result = os.popen(command).read()\n        \n        return Message(\n            text=\"Done Running ZDM: \" + result,\n        )\n        \n        \n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              }
            },
            "description": "Use as a template to create your own component.",
            "icon": "code",
            "base_classes": [
              "Message"
            ],
            "display_name": "ZeroDowntime Proxy",
            "documentation": "http://docs.langflow.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "output",
                "display_name": "Output",
                "method": "build_output",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "source",
              "target"
            ],
            "beta": false,
            "legacy": false,
            "edited": true,
            "metadata": {},
            "tool_mode": false,
            "lf_version": "1.1.1"
          },
          "type": "CustomComponent",
          "id": "CustomComponent-gJoJP"
        },
        "selected": false,
        "width": 320,
        "height": 262,
        "positionAbsolute": {
          "x": -801.3185397113441,
          "y": -112.91786315711315
        },
        "dragging": false,
        "measured": {
          "width": 320,
          "height": 262
        }
      },
      {
        "id": "CustomComponent-GOW3H",
        "type": "genericNode",
        "position": {
          "x": -370.63863120275175,
          "y": -87.62900950797112
        },
        "data": {
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "# from langflow.field_typing import Data\nfrom langflow.custom import Component\nfrom langflow.io import MessageTextInput, Output\nfrom langflow.schema import Data\nfrom langflow.schema.message import Message\nimport os\nclass CustomComponent(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.langflow.org/components/custom\"\n    icon = \"code\"\n    name = \"CustomComponent\"\n\n    inputs = [\n         MultilineInput(\n            name=\"log\",\n            display_name=\"Log\",\n            info=\"Log to be passed as input.\",\n        ),\n         MultilineInput(\n            name=\"start_connection\",\n            display_name=\"Start listening to active ZDM Process\",\n            info=\"Log to be passed as input.\",\n        ),\n       \n    ]\n\n    outputs = [\n        Output(display_name=\"Output\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Message:\n\n        result = os.popen(\"sleep 10\").read()\n        command = \"tail -30 /usr/local/app/zdm_run.log\"  \n        \n        result = os.popen(command).read()\n\n        return Message(\n            text=result,\n        )\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "log": {
                "tool_mode": false,
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "log",
                "value": "",
                "display_name": "Log",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Log to be passed as input.",
                "title_case": false,
                "type": "str",
                "_input_type": "MultilineInput"
              },
              "start_connection": {
                "tool_mode": false,
                "trace_as_input": true,
                "multiline": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "start_connection",
                "value": "",
                "display_name": "Start listening to active ZDM Process",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Log to be passed as input.",
                "title_case": false,
                "type": "str",
                "_input_type": "MultilineInput"
              }
            },
            "description": "Use as a template to create your own component.",
            "icon": "code",
            "base_classes": [
              "Message"
            ],
            "display_name": "ZDM Log Reader",
            "documentation": "http://docs.langflow.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "output",
                "display_name": "Output",
                "method": "build_output",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "log",
              "start_connection"
            ],
            "beta": false,
            "legacy": false,
            "edited": true,
            "metadata": {},
            "tool_mode": false,
            "lf_version": "1.1.1"
          },
          "type": "CustomComponent",
          "id": "CustomComponent-GOW3H"
        },
        "selected": false,
        "width": 320,
        "height": 337,
        "positionAbsolute": {
          "x": -370.63863120275175,
          "y": -87.62900950797112
        },
        "dragging": false,
        "measured": {
          "width": 320,
          "height": 337
        }
      },
      {
        "id": "ChatOutput-Iuf3O",
        "type": "genericNode",
        "position": {
          "x": 60.112310073560764,
          "y": -17.492817740304986
        },
        "data": {
          "node": {
            "template": {
              "_type": "Component",
              "background_color": {
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "list_add_label": "Add More",
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "background_color",
                "value": "",
                "display_name": "Background Color",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The background color of the icon.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "chat_icon": {
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "list_add_label": "Add More",
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "chat_icon",
                "value": "",
                "display_name": "Icon",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The icon of the message.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "from langflow.base.io.chat import ChatComponent\nfrom langflow.inputs import BoolInput\nfrom langflow.io import DropdownInput, MessageInput, MessageTextInput, Output\nfrom langflow.schema.message import Message\nfrom langflow.schema.properties import Source\nfrom langflow.utils.constants import (\n    MESSAGE_SENDER_AI,\n    MESSAGE_SENDER_NAME_AI,\n    MESSAGE_SENDER_USER,\n)\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"ZDM Output\"\n    description = \"Display a chat message in the Playground.\"\n    icon = \"MessagesSquare\"\n    name = \"ChatOutput\"\n    minimized = True\n\n    inputs = [\n        MessageInput(\n            name=\"input_value\",\n            display_name=\"Text\",\n            info=\"Message to be passed as output.\",\n        ),\n        BoolInput(\n            name=\"should_store_message\",\n            display_name=\"Store Messages\",\n            info=\"Store the message in the history.\",\n            value=True,\n            advanced=True,\n        ),\n        DropdownInput(\n            name=\"sender\",\n            display_name=\"Sender Type\",\n            options=[MESSAGE_SENDER_AI, MESSAGE_SENDER_USER],\n            value=MESSAGE_SENDER_AI,\n            advanced=True,\n            info=\"Type of sender.\",\n        ),\n        MessageTextInput(\n            name=\"sender_name\",\n            display_name=\"Sender Name\",\n            info=\"Name of the sender.\",\n            value=MESSAGE_SENDER_NAME_AI,\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"session_id\",\n            display_name=\"Session ID\",\n            info=\"The session ID of the chat. If empty, the current session ID parameter will be used.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"data_template\",\n            display_name=\"Data Template\",\n            value=\"{text}\",\n            advanced=True,\n            info=\"Template to convert Data to Text. If left empty, it will be dynamically set to the Data's text key.\",\n        ),\n        MessageTextInput(\n            name=\"background_color\",\n            display_name=\"Background Color\",\n            info=\"The background color of the icon.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"chat_icon\",\n            display_name=\"Icon\",\n            info=\"The icon of the message.\",\n            advanced=True,\n        ),\n        MessageTextInput(\n            name=\"text_color\",\n            display_name=\"Text Color\",\n            info=\"The text color of the name\",\n            advanced=True,\n        ),\n    ]\n    outputs = [\n        Output(\n            display_name=\"Message\",\n            name=\"message\",\n            method=\"message_response\",\n        ),\n    ]\n\n    def _build_source(self, id_: str | None, display_name: str | None, source: str | None) -> Source:\n        source_dict = {}\n        if id_:\n            source_dict[\"id\"] = id_\n        if display_name:\n            source_dict[\"display_name\"] = display_name\n        if source:\n            source_dict[\"source\"] = source\n        return Source(**source_dict)\n\n    async def message_response(self) -> Message:\n        source, icon, display_name, source_id = self.get_properties_from_source_component()\n        background_color = self.background_color\n        text_color = self.text_color\n        if self.chat_icon:\n            icon = self.chat_icon\n        message = self.input_value if isinstance(self.input_value, Message) else Message(text=self.input_value)\n        message.sender = self.sender\n        message.sender_name = self.sender_name\n        message.session_id = self.session_id\n        message.flow_id = self.graph.flow_id if hasattr(self, \"graph\") else None\n        message.properties.source = self._build_source(source_id, display_name, source)\n        message.properties.icon = icon\n        message.properties.background_color = background_color\n        message.properties.text_color = text_color\n        if self.session_id and isinstance(message, Message) and self.should_store_message:\n            stored_message = await self.send_message(\n                message,\n            )\n            self.message.value = stored_message\n            message = stored_message\n\n        self.status = message\n        return message\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "data_template": {
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "list_add_label": "Add More",
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "data_template",
                "value": "{text}",
                "display_name": "Data Template",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Template to convert Data to Text. If left empty, it will be dynamically set to the Data's text key.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "input_value": {
                "trace_as_input": true,
                "tool_mode": false,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "list_add_label": "Add More",
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "input_value",
                "value": "",
                "display_name": "Text",
                "advanced": false,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Message to be passed as output.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageInput"
              },
              "sender": {
                "tool_mode": false,
                "trace_as_metadata": true,
                "options": [
                  "Machine",
                  "User"
                ],
                "options_metadata": [],
                "combobox": false,
                "dialog_inputs": {},
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "sender",
                "value": "Machine",
                "display_name": "Sender Type",
                "advanced": true,
                "dynamic": false,
                "info": "Type of sender.",
                "title_case": false,
                "type": "str",
                "_input_type": "DropdownInput"
              },
              "sender_name": {
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "list_add_label": "Add More",
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "sender_name",
                "value": "AI",
                "display_name": "Sender Name",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "Name of the sender.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "session_id": {
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "list_add_label": "Add More",
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "session_id",
                "value": "",
                "display_name": "Session ID",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The session ID of the chat. If empty, the current session ID parameter will be used.",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              },
              "should_store_message": {
                "tool_mode": false,
                "trace_as_metadata": true,
                "list": false,
                "list_add_label": "Add More",
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "should_store_message",
                "value": true,
                "display_name": "Store Messages",
                "advanced": true,
                "dynamic": false,
                "info": "Store the message in the history.",
                "title_case": false,
                "type": "bool",
                "_input_type": "BoolInput"
              },
              "text_color": {
                "tool_mode": false,
                "trace_as_input": true,
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "list_add_label": "Add More",
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "text_color",
                "value": "",
                "display_name": "Text Color",
                "advanced": true,
                "input_types": [
                  "Message"
                ],
                "dynamic": false,
                "info": "The text color of the name",
                "title_case": false,
                "type": "str",
                "_input_type": "MessageTextInput"
              }
            },
            "description": "Display a chat message in the Playground.",
            "icon": "MessagesSquare",
            "base_classes": [
              "Message"
            ],
            "display_name": "ZDM Output",
            "documentation": "",
            "minimized": true,
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Message"
                ],
                "selected": "Message",
                "name": "message",
                "hidden": null,
                "display_name": "Message",
                "method": "message_response",
                "value": "__UNDEFINED__",
                "cache": true,
                "required_inputs": null,
                "allows_loop": false
              }
            ],
            "field_order": [
              "input_value",
              "should_store_message",
              "sender",
              "sender_name",
              "session_id",
              "data_template",
              "background_color",
              "chat_icon",
              "text_color"
            ],
            "beta": false,
            "legacy": false,
            "edited": true,
            "metadata": {},
            "tool_mode": false
          },
          "type": "ChatOutput",
          "id": "ChatOutput-Iuf3O"
        },
        "selected": false,
        "width": 320,
        "height": 232,
        "positionAbsolute": {
          "x": 60.112310073560764,
          "y": -17.492817740304986
        },
        "dragging": false,
        "measured": {
          "width": 320,
          "height": 232
        }
      },
      {
        "id": "CustomComponent-z57oi",
        "type": "genericNode",
        "position": {
          "x": -1296.1871428219104,
          "y": -452.30952949182245
        },
        "data": {
          "node": {
            "template": {
              "_type": "Component",
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "# from langflow.field_typing import Data\nfrom langflow.custom import Component\nfrom langflow.io import MessageTextInput, Output\nfrom langflow.schema import Data\nfrom langflow.field_typing import Text\n\n\nclass CustomComponent(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.langflow.org/components/custom\"\n    icon = \"code\"\n    name = \"CustomComponent\"\n    idx = 1;\n\n    inputs = [\n        StrInput(\n            name=\"source\",\n            display_name=\"source IP\",\n            info=\"Source IP\",\n            value=\"127.0.0.1\",\n            required=True,\n        ),\n        StrInput(\n            name=\"source_username\",\n            display_name=\"Cassandra Username\",\n            info=\"Cassandra Username\",\n            value=\"\",\n            \n        ),\n        StrInput(\n            name=\"source_password\",\n            display_name=\"Cassandra Password\",\n            info=\"Cassandra Password\",\n            value=\"\",\n            \n        ),\n        IntInput(\n            name=\"source_port\",\n            display_name=\"Source Port\",\n            info=\"Source Port\",\n            value=9042,\n            \n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"SourceConnection\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Data:\n        #data = Data(value=self.input_value)\n        #self.status = data\n        self.idx = self.idx + 1\n        return Data(\n                data={\n                    \"idx\": self.idx,\n                    \"ip\": self.source,\n                    \"source_username\": self.source_username,\n                    \"source_password\": self.source_password,\n                    \"source_port\": self.source_port,\n                    \n                },\n            )\n            \n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "source": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": true,
                "placeholder": "",
                "show": true,
                "name": "source",
                "value": "127.0.0.1",
                "display_name": "source IP",
                "advanced": false,
                "dynamic": false,
                "info": "Source IP",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "source_password": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "source_password",
                "value": "",
                "display_name": "Cassandra Password",
                "advanced": false,
                "dynamic": false,
                "info": "Cassandra Password",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "source_port": {
                "trace_as_metadata": true,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "source_port",
                "value": 9042,
                "display_name": "Source Port",
                "advanced": false,
                "dynamic": false,
                "info": "Source Port",
                "title_case": false,
                "type": "int",
                "_input_type": "IntInput",
                "load_from_db": false
              },
              "source_username": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "source_username",
                "value": "",
                "display_name": "Cassandra Username",
                "advanced": false,
                "dynamic": false,
                "info": "Cassandra Username",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              }
            },
            "description": "Use as a template to create your own component.",
            "icon": "code",
            "base_classes": [
              "Data"
            ],
            "display_name": "Cassandra Source",
            "documentation": "http://docs.langflow.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "output",
                "display_name": "SourceConnection",
                "method": "build_output",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "source",
              "source_username",
              "source_password",
              "source_port"
            ],
            "beta": false,
            "legacy": false,
            "edited": true,
            "metadata": {},
            "tool_mode": false,
            "official": false,
            "lf_version": "1.1.1"
          },
          "type": "CustomComponent",
          "id": "CustomComponent-z57oi"
        },
        "selected": false,
        "width": 320,
        "height": 509,
        "positionAbsolute": {
          "x": -1296.1871428219104,
          "y": -452.30952949182245
        },
        "dragging": false,
        "measured": {
          "width": 320,
          "height": 509
        }
      },
      {
        "id": "CustomComponent-D9RIU",
        "type": "genericNode",
        "position": {
          "x": -1307.546550159076,
          "y": 167.80555709318085
        },
        "data": {
          "node": {
            "template": {
              "_type": "Component",
              "path": {
                "trace_as_metadata": true,
                "file_path": "",
                "fileTypes": [
                  "zip"
                ],
                "list": false,
                "required": false,
                "placeholder": "",
                "show": true,
                "name": "path",
                "value": "",
                "display_name": "Secure Connect Bundle",
                "advanced": false,
                "dynamic": false,
                "info": "Supported file types: zip",
                "title_case": false,
                "type": "file",
                "_input_type": "FileInput",
                "load_from_db": false
              },
              "code": {
                "type": "code",
                "required": true,
                "placeholder": "",
                "list": false,
                "show": true,
                "multiline": true,
                "value": "# from langflow.field_typing import Data\nfrom langflow.custom import Component\nfrom langflow.io import MessageTextInput, Output\nfrom langflow.schema import Data\nimport os\n\n\nclass CustomComponent(Component):\n    display_name = \"Custom Component\"\n    description = \"Use as a template to create your own component.\"\n    documentation: str = \"http://docs.langflow.org/components/custom\"\n    icon = \"code\"\n    name = \"CustomComponent\"\n\n    inputs = [\n        FileInput(\n            name=\"path\",\n            display_name=\"Secure Connect Bundle\",\n            file_types=[\"zip\"],\n            info=f\"Supported file types: {'zip'}\",\n        ),\n         StrInput(\n            name=\"target_username\",\n            display_name=\"AstraDB Username\",\n            info=\"AstraDB Username\",\n            value=\"ASTRADB_USERNAME\",\n            required=True,\n        ),\n        StrInput(\n            name=\"target_password\",\n            display_name=\"AstraDB Password\",\n            info=\"AstraDB Password\",\n            value=\"ASTRADB_PASSWORD\",\n            required=True,\n        ),\n    ]\n\n    outputs = [\n        Output(display_name=\"TargetConnection\", name=\"output\", method=\"build_output\"),\n    ]\n\n    def build_output(self) -> Data:\n        \n        cmd = \"cp \" + self.resolve_path(self.path) +  \" /usr/local/app/test_scb.zip\"  \n        \n        returned_value = os.system(cmd)  \n        data = Data(\n            data={\"scb_path\":self.path,\n                  \"target_username\":self.target_username,\n                  \"target_password\":self.target_password,\n                  }\n            )\n        self.status = data\n        return data\n",
                "fileTypes": [],
                "file_path": "",
                "password": false,
                "name": "code",
                "advanced": true,
                "dynamic": true,
                "info": "",
                "load_from_db": false,
                "title_case": false
              },
              "target_password": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": true,
                "placeholder": "",
                "show": true,
                "name": "target_password",
                "value": "",
                "display_name": "AstraDB Password",
                "advanced": false,
                "dynamic": false,
                "info": "AstraDB Password",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              },
              "target_username": {
                "trace_as_metadata": true,
                "load_from_db": false,
                "list": false,
                "required": true,
                "placeholder": "",
                "show": true,
                "name": "target_username",
                "value": "",
                "display_name": "AstraDB Username",
                "advanced": false,
                "dynamic": false,
                "info": "AstraDB Username",
                "title_case": false,
                "type": "str",
                "_input_type": "StrInput"
              }
            },
            "description": "Use as a template to create your own component.",
            "icon": "code",
            "base_classes": [
              "Data"
            ],
            "display_name": "AstraDB Target ",
            "documentation": "http://docs.langflow.org/components/custom",
            "custom_fields": {},
            "output_types": [],
            "pinned": false,
            "conditional_paths": [],
            "frozen": false,
            "outputs": [
              {
                "types": [
                  "Data"
                ],
                "selected": "Data",
                "name": "output",
                "display_name": "TargetConnection",
                "method": "build_output",
                "value": "__UNDEFINED__",
                "cache": true
              }
            ],
            "field_order": [
              "path",
              "target_username",
              "target_password"
            ],
            "beta": false,
            "legacy": false,
            "edited": true,
            "metadata": {},
            "tool_mode": false
          },
          "type": "CustomComponent",
          "id": "CustomComponent-D9RIU"
        },
        "selected": false,
        "width": 320,
        "height": 422,
        "dragging": false,
        "positionAbsolute": {
          "x": -1307.546550159076,
          "y": 167.80555709318085
        },
        "measured": {
          "width": 320,
          "height": 422
        }
      }
    ],
    "edges": [
      {
        "source": "CustomComponent-GOW3H",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-GOW3Hœ,œnameœ:œoutputœ,œoutput_typesœ:[œMessageœ]}",
        "target": "ChatOutput-Iuf3O",
        "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-Iuf3Oœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "input_value",
            "id": "ChatOutput-Iuf3O",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-GOW3H",
            "name": "output",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-GOW3H{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-GOW3Hœ,œnameœ:œoutputœ,œoutput_typesœ:[œMessageœ]}-ChatOutput-Iuf3O{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-Iuf3Oœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "animated": true,
        "className": "",
        "selected": false
      },
      {
        "source": "ChatOutput-Iuf3O",
        "sourceHandle": "{œdataTypeœ:œChatOutputœ,œidœ:œChatOutput-Iuf3Oœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}",
        "target": "CustomComponent-GOW3H",
        "targetHandle": "{œfieldNameœ:œlogœ,œidœ:œCustomComponent-GOW3Hœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "log",
            "id": "CustomComponent-GOW3H",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "ChatOutput",
            "id": "ChatOutput-Iuf3O",
            "name": "message",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-ChatOutput-Iuf3O{œdataTypeœ:œChatOutputœ,œidœ:œChatOutput-Iuf3Oœ,œnameœ:œmessageœ,œoutput_typesœ:[œMessageœ]}-CustomComponent-GOW3H{œfieldNameœ:œlogœ,œidœ:œCustomComponent-GOW3Hœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "className": "",
        "animated": false,
        "selected": false
      },
      {
        "source": "CustomComponent-gJoJP",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-gJoJPœ,œnameœ:œoutputœ,œoutput_typesœ:[œMessageœ]}",
        "target": "CustomComponent-GOW3H",
        "targetHandle": "{œfieldNameœ:œstart_connectionœ,œidœ:œCustomComponent-GOW3Hœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "data": {
          "targetHandle": {
            "fieldName": "start_connection",
            "id": "CustomComponent-GOW3H",
            "inputTypes": [
              "Message"
            ],
            "type": "str"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-gJoJP",
            "name": "output",
            "output_types": [
              "Message"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-gJoJP{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-gJoJPœ,œnameœ:œoutputœ,œoutput_typesœ:[œMessageœ]}-CustomComponent-GOW3H{œfieldNameœ:œstart_connectionœ,œidœ:œCustomComponent-GOW3Hœ,œinputTypesœ:[œMessageœ],œtypeœ:œstrœ}",
        "className": "",
        "animated": false,
        "selected": false
      },
      {
        "source": "CustomComponent-z57oi",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-z57oiœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}",
        "target": "CustomComponent-gJoJP",
        "targetHandle": "{œfieldNameœ:œsourceœ,œidœ:œCustomComponent-gJoJPœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "source",
            "id": "CustomComponent-gJoJP",
            "inputTypes": [
              "Data"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-z57oi",
            "name": "output",
            "output_types": [
              "Data"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-z57oi{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-z57oiœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}-CustomComponent-gJoJP{œfieldNameœ:œsourceœ,œidœ:œCustomComponent-gJoJPœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "animated": false,
        "className": ""
      },
      {
        "source": "CustomComponent-D9RIU",
        "sourceHandle": "{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-D9RIUœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}",
        "target": "CustomComponent-gJoJP",
        "targetHandle": "{œfieldNameœ:œtargetœ,œidœ:œCustomComponent-gJoJPœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "data": {
          "targetHandle": {
            "fieldName": "target",
            "id": "CustomComponent-gJoJP",
            "inputTypes": [
              "Data"
            ],
            "type": "other"
          },
          "sourceHandle": {
            "dataType": "CustomComponent",
            "id": "CustomComponent-D9RIU",
            "name": "output",
            "output_types": [
              "Data"
            ]
          }
        },
        "id": "reactflow__edge-CustomComponent-D9RIU{œdataTypeœ:œCustomComponentœ,œidœ:œCustomComponent-D9RIUœ,œnameœ:œoutputœ,œoutput_typesœ:[œDataœ]}-CustomComponent-gJoJP{œfieldNameœ:œtargetœ,œidœ:œCustomComponent-gJoJPœ,œinputTypesœ:[œDataœ],œtypeœ:œotherœ}",
        "className": "",
        "animated": false
      }
    ],
    "viewport": {
      "x": 653.2296224271623,
      "y": 236.2947946386757,
      "zoom": 0.4684528843945473
    }
  }
}